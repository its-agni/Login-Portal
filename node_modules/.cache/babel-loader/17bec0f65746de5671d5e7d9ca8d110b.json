{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yours\\\\OneDrive\\\\Desktop\\\\Auth\\\\src\\\\store\\\\auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet logoutTimer;\nconst AuthContext = /*#__PURE__*/React.createContext({\n  token: \"\",\n  isLoggedIn: false,\n  login: token => {},\n  logout: () => {}\n});\n\nconst timeCal = timeout => {\n  const timeNow = new Date().getTime();\n  const timeAdj = new Date(timeout).getTime();\n  const timeLeft = timeAdj - timeNow;\n  return timeLeft;\n};\n\nconst storedToken = () => {\n  const initialStoredToken = localStorage.getItem(\"token\");\n  const storedTime = localStorage.getItem(\"expireTime\");\n  const leftTime = timeCal(storedTime);\n\n  if (leftTime <= 60000) {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expireTime\");\n    return null;\n  }\n\n  return {\n    token: initialStoredToken,\n    timeLeft: leftTime\n  };\n};\n\nexport const AuthContextProvider = props => {\n  _s();\n\n  const tokenData = storedToken();\n  let initialToken;\n\n  if (tokenData) {\n    initialToken = tokenData.token;\n  }\n\n  const [token, setToken] = useState(initialToken);\n  const isLoggedIn = !!token;\n  const logoutHandler = useCallback(() => {\n    setToken(null);\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expireTime\");\n\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  }, []);\n\n  const loginHandler = (token, timeout) => {\n    setToken(token);\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"expireTime\", timeout);\n    const timeoutTime = timeCal(timeout);\n    logoutTimer = setTimeout(logoutHandler, timeoutTime);\n  };\n\n  useEffect(() => {\n    if (tokenData) {\n      logoutTimer = setTimeout(logoutHandler, tokenData.timeLeft);\n    }\n  }, [tokenData, logoutHandler]);\n  const contextValue = {\n    token: token,\n    isLoggedIn: isLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"Lh1CfGbFk5nTLZoGW/pEiX6CFRc=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["C:/Users/yours/OneDrive/Desktop/Auth/src/store/auth-context.js"],"names":["React","useState","useEffect","useCallback","logoutTimer","AuthContext","createContext","token","isLoggedIn","login","logout","timeCal","timeout","timeNow","Date","getTime","timeAdj","timeLeft","storedToken","initialStoredToken","localStorage","getItem","storedTime","leftTime","removeItem","AuthContextProvider","props","tokenData","initialToken","setToken","logoutHandler","clearTimeout","loginHandler","setItem","timeoutTime","setTimeout","contextValue","children"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\n\r\nlet logoutTimer;\r\n\r\nconst AuthContext = React.createContext({\r\n  token: \"\",\r\n  isLoggedIn: false,\r\n  login: (token) => {},\r\n  logout: () => {},\r\n});\r\n\r\nconst timeCal = (timeout) => {\r\n  const timeNow = new Date().getTime();\r\n  const timeAdj = new Date(timeout).getTime();\r\n\r\n  const timeLeft = timeAdj - timeNow;\r\n  return timeLeft;\r\n};\r\n\r\nconst storedToken = () => {\r\n  const initialStoredToken = localStorage.getItem(\"token\");\r\n  const storedTime = localStorage.getItem(\"expireTime\");\r\n  const leftTime = timeCal(storedTime);\r\n  if (leftTime <= 60000) {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"expireTime\");\r\n    return null;\r\n  }\r\n\r\n  return {\r\n    token: initialStoredToken,\r\n    timeLeft: leftTime,\r\n  };\r\n};\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  const tokenData = storedToken();\r\n  let initialToken;\r\n  if (tokenData) {\r\n    initialToken = tokenData.token;\r\n  }\r\n\r\n  const [token, setToken] = useState(initialToken);\r\n\r\n  const isLoggedIn = !!token;\r\n\r\n  const logoutHandler = useCallback(() => {\r\n    setToken(null);\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"expireTime\");\r\n\r\n    if (logoutTimer) {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, []);\r\n\r\n  const loginHandler = (token, timeout) => {\r\n    setToken(token);\r\n    localStorage.setItem(\"token\", token);\r\n    localStorage.setItem(\"expireTime\", timeout);\r\n\r\n    const timeoutTime = timeCal(timeout);\r\n    logoutTimer = setTimeout(logoutHandler, timeoutTime);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (tokenData) {\r\n      logoutTimer = setTimeout(logoutHandler, tokenData.timeLeft);\r\n    }\r\n  }, [tokenData, logoutHandler]);\r\n\r\n  const contextValue = {\r\n    token: token,\r\n    isLoggedIn: isLoggedIn,\r\n    login: loginHandler,\r\n    logout: logoutHandler,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n"]},"metadata":{},"sourceType":"module"}