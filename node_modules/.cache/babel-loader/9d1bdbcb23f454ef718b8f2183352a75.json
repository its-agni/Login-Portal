{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yours\\\\OneDrive\\\\Desktop\\\\Auth\\\\src\\\\components\\\\Auth\\\\AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useContext } from \"react\";\nimport AuthContext from \"../../store/auth-context\";\nimport classes from \"./AuthForm.module.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  const enteredEmail = useRef();\n  const enteredPassword = useRef();\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setLoading] = useState(false);\n  const ctx = useContext(AuthContext);\n  const hist = useHistory();\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  const onSubmitHandler = event => {\n    event.preventDefault();\n    const emailInput = enteredEmail.current.value;\n    const passwordInput = enteredPassword.current.value;\n    setLoading(true);\n    let url;\n\n    if (isLogin) {\n      url = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDlHnXAVoHyaqP0SUas4vNkRvfYuYpAxzM\";\n    } else {\n      url = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDlHnXAVoHyaqP0SUas4vNkRvfYuYpAxzM\";\n    }\n\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: emailInput,\n        password: passwordInput,\n        returnSecureToken: true\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      setLoading(false);\n\n      if (res.ok) {\n        return res.json();\n      } else {\n        return res.json().then(data => {\n          let errorMessage = \"Authentication Failed\"; // if (data && data.error && data.error.message) {\n          //  errorMessage = data.error.message;\n\n          throw new Error(errorMessage);\n        });\n      }\n    }).then(data => {\n      const timeout = new Date(new Date().getTime() + +data.expiresIn * 1000);\n      ctx.login(data.idToken, timeout);\n      hist.replace(\"/\");\n    }).catch(err => {\n      alert(err.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? \"Login\" : \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          ref: enteredEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          ref: enteredPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? \"Login\" : \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Sending Request...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? \"Create new account\" : \"Login with existing account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthForm, \"lmbGb06I1R5SZdcEd2zXCgm5Te8=\", false, function () {\n  return [useHistory];\n});\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["C:/Users/yours/OneDrive/Desktop/Auth/src/components/Auth/AuthForm.js"],"names":["useState","useRef","useContext","AuthContext","classes","useHistory","AuthForm","enteredEmail","enteredPassword","isLogin","setIsLogin","isLoading","setLoading","ctx","hist","switchAuthModeHandler","prevState","onSubmitHandler","event","preventDefault","emailInput","current","value","passwordInput","url","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","res","ok","json","data","errorMessage","Error","timeout","Date","getTime","expiresIn","login","idToken","replace","catch","err","alert","message","auth","control","actions","toggle"],"mappings":"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","sourcesContent":["import { useState, useRef, useContext } from \"react\";\nimport AuthContext from \"../../store/auth-context\";\nimport classes from \"./AuthForm.module.css\";\nimport { useHistory } from \"react-router-dom\";\n\nconst AuthForm = () => {\n  const enteredEmail = useRef();\n  const enteredPassword = useRef();\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setLoading] = useState(false);\n  const ctx = useContext(AuthContext);\n  const hist = useHistory();\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const onSubmitHandler = (event) => {\n    event.preventDefault();\n    const emailInput = enteredEmail.current.value;\n    const passwordInput = enteredPassword.current.value;\n    setLoading(true);\n    let url;\n    if (isLogin) {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDlHnXAVoHyaqP0SUas4vNkRvfYuYpAxzM\";\n    } else {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDlHnXAVoHyaqP0SUas4vNkRvfYuYpAxzM\";\n    }\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: emailInput,\n        password: passwordInput,\n        returnSecureToken: true,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        setLoading(false);\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            let errorMessage = \"Authentication Failed\";\n            // if (data && data.error && data.error.message) {\n            //  errorMessage = data.error.message;\n            throw new Error(errorMessage);\n          });\n        }\n      })\n      .then((data) => {\n        const timeout = new Date(new Date().getTime() + +data.expiresIn * 1000);\n        ctx.login(data.idToken, timeout);\n        hist.replace(\"/\");\n      })\n      .catch((err) => {\n        alert(err.message);\n      });\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n      <form onSubmit={onSubmitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input type=\"email\" id=\"email\" required ref={enteredEmail} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input type=\"password\" id=\"password\" required ref={enteredPassword} />\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && (\n            <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\n          )}\n          {isLoading && <p>Sending Request...</p>}\n          <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n"]},"metadata":{},"sourceType":"module"}